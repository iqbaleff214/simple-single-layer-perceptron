<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css"
      rel="stylesheet"
      integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1"
      crossorigin="anonymous"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bs-stepper/dist/css/bs-stepper.min.css"
    />

    <title>Jaringan Saraf Tiruan</title>
  </head>
  <body>
    <div class="container mt-3">
      <div class="row">
        <div class="col-md-12">
          <div class="card border-primary my-4">
            <div class="card-header bg-primary text-white p-4">
              <h5>Jaringan Saraf Tiruan - Perceptron</h5>
              <h6 id="sub-title"></h6>
            </div>
            <div class="card-body">
              <div class="bs-stepper">
                <div
                  class="bs-stepper-header mb-3"
                  role="tablist"
                  style="overflow: scroll"
                >
                  <!-- your steps here -->
                  <div class="step" data-target="#tahap-satu">
                    <button
                      type="button"
                      class="step-trigger"
                      role="tab"
                      aria-controls="tahap-satu"
                      id="tahap-satu-trigger"
                    >
                      <span class="bs-stepper-circle">1</span>
                      <span class="bs-stepper-label">Jumlah sampel</span>
                    </button>
                  </div>
                  <div class="line"></div>
                  <div class="step" data-target="#tahap-dua">
                    <button
                      type="button"
                      class="step-trigger"
                      role="tab"
                      aria-controls="tahap-dua"
                      id="tahap-dua-trigger"
                    >
                      <span class="bs-stepper-circle">2</span>
                      <span class="bs-stepper-label">Set data sampel</span>
                    </button>
                  </div>
                  <div class="line"></div>
                  <div class="step" data-target="#tahap-tiga">
                    <button
                      type="button"
                      class="step-trigger"
                      role="tab"
                      aria-controls="tahap-tiga"
                      id="tahap-tiga-trigger"
                    >
                      <span class="bs-stepper-circle">3</span>
                      <span class="bs-stepper-label">Identifikasi</span>
                    </button>
                  </div>
                  <div class="line"></div>
                  <div class="step" data-target="#tahap-empat">
                    <button
                      type="button"
                      class="step-trigger"
                      role="tab"
                      aria-controls="tahap-empat"
                      id="tahap-empat-trigger"
                    >
                      <span class="bs-stepper-circle">4</span>
                      <span class="bs-stepper-label">Pelatihan</span>
                    </button>
                  </div>
                  <div class="line"></div>
                  <div class="step" data-target="#tahap-lima">
                    <button
                      type="button"
                      class="step-trigger"
                      role="tab"
                      aria-controls="tahap-lima"
                      id="tahap-lima-trigger"
                    >
                      <span class="bs-stepper-circle">5</span>
                      <span class="bs-stepper-label">Pengujian</span>
                    </button>
                  </div>
                </div>
                <div class="bs-stepper-content">
                  <!-- your steps content here -->
                  <!-- Tahap 1 -->
                  <div
                    id="tahap-satu"
                    class="content"
                    role="tabpanel"
                    aria-labelledby="tahap-satu-trigger"
                  >
                    <div class="mb-4">
                      <button class="btn btn-outline-primary disabled">
                        <span aria-hidden="true">&laquo;</span> Kembali
                      </button>
                      <button
                        class="btn btn-primary"
                        id="sample-data-total-button"
                      >
                        Lanjutkan <span aria-hidden="true">&raquo;</span>
                      </button>
                    </div>

                    <label for="sample-data-total" class="form-label">
                      Data sampel:
                      <output
                        id="sample-data-total-value"
                        class="badge bg-primary"
                      >
                        1
                      </output>
                    </label>
                    <div class="row">
                      <div class="col-md-12">
                        <input
                          type="range"
                          class="form-range"
                          min="1"
                          value="1"
                          id="sample-data-total"
                        />
                      </div>
                    </div>
                  </div>
                  <!-- Tahap 2 -->
                  <div
                    id="tahap-dua"
                    class="content"
                    role="tabpanel"
                    aria-labelledby="tahap-dua-trigger"
                  >
                    <button
                      class="btn btn-outline-primary"
                      onclick="stepper.previous()"
                    >
                      <span aria-hidden="true">&laquo;</span> Kembali
                    </button>
                    <button class="btn btn-primary" id="btn-to-identification">
                      Lanjutkan <span aria-hidden="true">&raquo;</span>
                    </button>
                    <div
                      id="sample-data-table"
                      class="table-responsive p-2 mt-3"
                    ></div>
                  </div>
                  <!-- Tahap 3 -->
                  <div
                    id="tahap-tiga"
                    class="content"
                    role="tabpanel"
                    aria-labelledby="tahap-tiga-trigger"
                  >
                    <ul
                      class="nav nav-pills mb-3"
                      id="pills-tab"
                      role="tablist"
                    >
                      <li>
                        <button
                          class="btn btn-outline-primary me-1"
                          onclick="stepper.previous()"
                        >
                          <span aria-hidden="true">&laquo;</span> Kembali
                        </button>
                      </li>
                      <li class="nav-item" role="presentation">
                        <a
                          class="nav-link active"
                          id="pills-home-tab"
                          data-bs-toggle="pill"
                          href="#pills-home"
                          role="tab"
                          aria-controls="pills-home"
                          aria-selected="true"
                          >Keterangan</a
                        >
                      </li>
                      <li class="nav-item" role="presentation">
                        <a
                          class="nav-link btn-ou"
                          id="pills-profile-tab"
                          data-bs-toggle="pill"
                          href="#pills-profile"
                          role="tab"
                          aria-controls="pills-profile"
                          aria-selected="false"
                          >Binary</a
                        >
                      </li>
                      <li>
                        <button
                          class="btn btn-primary ms-1"
                          id="btn-to-perceptron"
                        >
                          Lanjutkan <span aria-hidden="true">&raquo;</span>
                        </button>
                      </li>
                    </ul>
                    <div class="tab-content" id="pills-tabContent">
                      <div
                        class="tab-pane fade show active"
                        id="pills-home"
                        role="tabpanel"
                        aria-labelledby="pills-home-tab"
                      >
                        <div
                          id="identification-read-table"
                          class="table-responsive p-2"
                        ></div>
                      </div>
                      <div
                        class="tab-pane fade"
                        id="pills-profile"
                        role="tabpanel"
                        aria-labelledby="pills-profile-tab"
                      >
                        <div
                          id="identification-table"
                          class="table-responsive p-2"
                        ></div>
                      </div>
                    </div>
                  </div>
                  <!-- Tahap 4 -->
                  <div
                    id="tahap-empat"
                    class="content"
                    role="tabpanel"
                    aria-labelledby="tahap-empat-trigger"
                  >
                    <button
                      class="btn btn-outline-primary"
                      onclick="stepper.previous()"
                    >
                      <span aria-hidden="true">&laquo;</span> Kembali
                    </button>
                    <button class="btn btn-primary" id="btn-to-test">
                      Lanjutkan <span aria-hidden="true">&raquo;</span>
                    </button>
                    <div
                      id="perhitungan-perceptron"
                      class="table-responsive p-2 mt-3"
                    ></div>
                  </div>
                  <!-- Tahap 5 -->
                  <div
                    id="tahap-lima"
                    class="content"
                    role="tabpanel"
                    aria-labelledby="tahap-lima-trigger"
                  >
                    <button
                      class="btn btn-outline-primary"
                      onclick="stepper.previous()"
                    >
                      <span aria-hidden="true">&laquo;</span> Kembali
                    </button>
                    <button class="btn btn-primary" id="btn-proses-uji">
                      Proses
                    </button>
                    <button class="btn btn-primary disabled">
                      Lanjutkan <span aria-hidden="true">&raquo;</span>
                    </button>
                    <div class="p-2 mt-3">
                      <div class="row">
                        <div class="col-6">
                          <div id="tahap-lima-input"></div>
                        </div>
                        <div class="col-6">
                          <div class="card">
                            <div class="card-body">
                              Prediksi:
                              <div id="tahap-lima-hasil" class="h2"></div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Bootstrap JS Bundle with Popper -->
    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"
      integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW"
      crossorigin="anonymous"
    ></script>
    <!-- JQuery -->
    <script
      src="https://code.jquery.com/jquery-3.5.1.min.js"
      integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0="
      crossorigin="anonymous"
    ></script>
    <!-- Stepper -->
    <script src="https://cdn.jsdelivr.net/npm/bs-stepper/dist/js/bs-stepper.min.js"></script>
    <script>
      // Example
      const _title =
        "SISTEM DETEKSI BUAH-BUAHAN MENGGUNAKAN METODE ARTIFICIAL NEURAL NETWORK SINGLE LAYER PERCEPTRON";
      const _columns = ["Warna", "Bentuk", "Tekstur", "Rasa"];
      const _columnChoice = [
        ["Tidak Merah", "Merah"],
        ["Tidak Bulat", "Bulat"],
        ["Tidak Kasar", "Kasar"],
        ["Tidak Manis", "Manis"],
      ];
      const _columnTarget = ["Jeruk", "Apel"];
      // const _title =
      //   "Pendeteksi Jenis Kelamin berdasarkan ciri fisik dengan JST Single Layer Perceptron";
      // const _columns = ["Rambut", "Berkumis", "Tinggi", "Penampilan"];
      // const _columnChoice = [
      //   ["Panjang", "Pendek"],
      //   ["Tidak", "Iya"],
      //   ["Pendek", "Tinggi"],
      //   ["Feminin", "Maskulin"],
      // ];
      // const _columnTarget = ["Perempuan", "Laki-laki"];

      // Class Perceptron
      class Perceptron {
        constructor() {
          this.bobot = [0.5, 0.5, 0.5, 0.5];
          this.batas = 0;
          this.error = 0;
        }
        checkTarget(target, output, x1, x2, x3, x4) {
          let _error = "";
          if (target == output) {
            this.batas++;
          } else {
            this.error = target - output;
            this.bobot[0] = this.bobot[0] + this.error * x1;
            this.bobot[1] = this.bobot[1] + this.error * x2;
            this.bobot[2] = this.bobot[2] + this.error * x3;
            this.bobot[3] = this.bobot[3] + this.error * x4;
            _error = `table-danger`;
          }
          return _error;
        }
        sumFunction(x1, x2, x3, x4) {
          return (
            x1 * this.bobot[0] +
            x2 * this.bobot[1] +
            x3 * this.bobot[2] +
            x4 * this.bobot[3]
          );
        }
        resetBatas() {
          this.batas = 0;
        }
        activationFunction(sum) {
          return sum >= 0 ? 1 : 0;
        }
      }

      // Inisialisasi nilai
      var _sampledata = 1;
      var _arrSampleInput1 = [];
      var _arrSampleInput2 = [];
      var _arrSampleInput3 = [];
      var _arrSampleInput4 = [];
      var _arrSampleTarget = [];

      // membuat object Perceptron
      const perceptron = new Perceptron();

      // Memasang inisialisasi jumlah sample data
      $("#sub-title").html(_title);
      $("#sample-data-total-value").html(_sampledata);
      $("#sample-data-total").val(_sampledata);

      // BS-Stepper Init
      document.addEventListener("DOMContentLoaded", function () {
        window.stepper = new Stepper(document.querySelector(".bs-stepper"));
      });

      // JQuery onReady
      $(function () {
        // mengupdate nilai pada slider, tahap 1
        $(document).on("input", "#sample-data-total", function () {
          _sampledata = $(this).val();
          $("#sample-data-total-value").html(_sampledata);
        });

        // tombol Proses pada tahap 1, menuju tahap 2
        $("#sample-data-total-button").click(function () {
          $("#sample-data-table").html(generateTable(1));
          stepper.next();
        });

        // tombol Lanjutkan pada tahap 2, menuju tahap 3
        $("#btn-to-identification").click(function () {
          _arrSampleInput1.length = 0;
          _arrSampleInput2.length = 0;
          _arrSampleInput3.length = 0;
          _arrSampleInput4.length = 0;
          _arrSampleTarget.length = 0;
          for (let i = 1; i <= _sampledata; i++) {
            const input1 = $(`.sample-data-input-1-${i}`).val();
            const input2 = $(`.sample-data-input-2-${i}`).val();
            const input3 = $(`.sample-data-input-3-${i}`).val();
            const input4 = $(`.sample-data-input-4-${i}`).val();
            const target = $(`.sample-data-target-${i}`).val();

            _arrSampleInput1.push(input1);
            _arrSampleInput2.push(input2);
            _arrSampleInput3.push(input3);
            _arrSampleInput4.push(input4);
            _arrSampleTarget.push(target);
          }
          $("#identification-table").html(generateTable(2));
          $("#identification-read-table").html(generateTable(3));
          stepper.next();
        });

        // tombol Lanjukan pada tahap 3, menuju tahap 4
        $("#btn-to-perceptron").click(function () {
          stepper.next();
          $("#perhitungan-perceptron").html(generatePerceptron());
        });

        // tombol Lanjutkan pada tahap 4, menuju tahap 5
        $("#btn-to-test").click(function () {
          // alert("hai");
          $("#tahap-lima-input").html(generateForm());
          stepper.next();
        });

        // tomblo Proses pada tahap 5
        $(document).on("click", "#btn-proses-uji", function () {
          const _input1 = $("#uji-input-0").val();
          const _input2 = $("#uji-input-1").val();
          const _input3 = $("#uji-input-2").val();
          const _input4 = $("#uji-input-3").val();

          const sum = perceptron.sumFunction(
            _input1,
            _input2,
            _input3,
            _input4
          );
          const act = perceptron.activationFunction(sum);
          $("#tahap-lima-hasil").html(_columnTarget[act]);
        });
      });

      // Membuat table perhitungan/pelatihan
      function generatePerceptron() {
        let epoch = 1;
        let _row = "";
        while (true) {
          if (epoch == 10000) break;
          for (let i = 1; i <= _sampledata; i++) {
            const index = i - 1;
            let vIn = perceptron.sumFunction(
              _arrSampleInput1[index],
              _arrSampleInput2[index],
              _arrSampleInput3[index],
              _arrSampleInput4[index]
            );
            let hasilAktivasi = perceptron.activationFunction(vIn);
            const errorCheck = perceptron.checkTarget(
              _arrSampleTarget[index],
              hasilAktivasi,
              _arrSampleInput1[index],
              _arrSampleInput2[index],
              _arrSampleInput3[index],
              _arrSampleInput4[index]
            );
            if (i == 1) {
              _epochColumn = `<th scope="row" rowspan="${_sampledata}">${epoch}</th>
                                <td>${i}</td>`;
            } else {
              _epochColumn = `<td>${i}</td>`;
            }
            _row += `<tr class="${errorCheck}">
                        ${_epochColumn}
                        <td>${vIn}</td>
                        <td>${hasilAktivasi}</td>
                        <td>${_arrSampleTarget[index]}</td>
                        <td>
                            <div class="row">
                                <div class="col-3">
                                    W1 = <span class="badge bg-primary">${perceptron.bobot[0]}</span>
                                </div>
                                <div class="col-3">
                                    W2 = <span class="badge bg-primary">${perceptron.bobot[1]}</span>
                                </div>
                                <div class="col-3">
                                    W3 = <span class="badge bg-primary">${perceptron.bobot[2]}</span>
                                </div>
                                <div class="col-3">
                                    W4 = <span class="badge bg-primary">${perceptron.bobot[3]}</span>
                                </div>
                            </div>
                        </td>
                    </tr>`;
          }

          if (perceptron.batas == _sampledata) {
            break;
          } else {
            perceptron.resetBatas();
            epoch++;
          }
        }
        const _table = `<table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th scope="col">Epoch</th>
                                    <th scope="col">#</th>
                                    <th scope="col">Jumlah</th>
                                    <th scope="col">Output</th>
                                    <th scope="col">Target</th>
                                    <th scope="col">Bobot</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${_row}
                            </tbody>
                        </table>`;
        return _table;
      }

      // Membuat isi table
      function generateRow(col) {
        let _row = "";
        for (let i = 1; i <= _sampledata; i++) {
          if (col == 1) {
            _row += `<tr>
                        <th scope="row">${i}</th>
                        <td>
                            <select class="form-select form-select-sm sample-data-input-1-${i}" aria-label=".form-select-sm example" name="input1[]">
                                <option value="1">${_columnChoice[0][1]}</option>
                                <option value="0">${_columnChoice[0][0]}</option>
                            </select>
                        </td>
                        <td>
                            <select class="form-select form-select-sm sample-data-input-2-${i}" aria-label=".form-select-sm example" name="input2[]">
                                <option value="1">${_columnChoice[1][1]}</option>
                                <option value="0">${_columnChoice[1][0]}</option>
                            </select>
                        </td>
                        <td>
                            <select class="form-select form-select-sm sample-data-input-3-${i}" aria-label=".form-select-sm example" name="input3[]">
                                <option value="1">${_columnChoice[2][1]}</option>
                                <option value="0">${_columnChoice[2][0]}</option>
                            </select>
                        </td>
                        <td>
                            <select class="form-select form-select-sm sample-data-input-4-${i}" aria-label=".form-select-sm example" name="input4[]">
                                <option value="1">${_columnChoice[3][1]}</option>
                                <option value="0">${_columnChoice[3][0]}</option>
                            </select>
                        </td>
                        <td>
                            <select class="form-select form-select-sm sample-data-target-${i}" aria-label=".form-select-sm example" name="target[]">
                                <option value="1">${_columnTarget[1]}</option>
                                <option value="0">${_columnTarget[0]}</option>
                            </select>
                        </td>
                    </tr>`;
          } else if (col == 2) {
            const index = i - 1;
            _row += `<tr>
                        <th scope="row">${i}</th>
                        <td>${_arrSampleInput1[index]}</td>
                        <td>${_arrSampleInput2[index]}</td>
                        <td>${_arrSampleInput3[index]}</td>
                        <td>${_arrSampleInput4[index]}</td>
                        <td>${_arrSampleTarget[index]}</td>
                    </tr>`;
          } else if (col == 3) {
            const index = i - 1;
            const input1 = _columnChoice[0][_arrSampleInput1[index]];
            const input2 = _columnChoice[1][_arrSampleInput2[index]];
            const input3 = _columnChoice[2][_arrSampleInput3[index]];
            const input4 = _columnChoice[3][_arrSampleInput4[index]];

            const target = _columnTarget[_arrSampleTarget[index]];
            _row += `<tr>
                        <th scope="row">${i}</th>
                        <td>${input1}</td>
                        <td>${input2}</td>
                        <td>${input3}</td>
                        <td>${input4}</td>
                        <td>${target}</td>
                    </tr>`;
          }
        }
        return _row;
      }

      // Membuat struktur table
      function generateTable(tipe = 1) {
        let _row = generateRow(tipe);
        const _table = `<table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th scope="col">#</th>
                                    <th scope="col">${_columns[0]}</th>
                                    <th scope="col">${_columns[1]}</th>
                                    <th scope="col">${_columns[2]}</th>
                                    <th scope="col">${_columns[3]}</th>
                                    <th scope="col">Target</th>
                                </tr>
                            </thead>
                            <tbody>
                                ${_row}
                            </tbody>
                        </table>`;
        return _table;
      }

      // Membuat form pengujian
      function generateForm() {
        let _input = "";
        for (let i = 0; i < 4; i++) {
          _input += `<div class="mb-3 row">
                          <label
                            for="uji-input-${i}"
                            class="col-sm-12 col-md-4 col-form-label">
                            ${_columns[i]}
                          </label>
                        <div class="col-sm-12 col-md-8">
                          <select
                            class="form-select"
                            id="uji-input-${i}"
                            aria-label="Default select example">
                            <option value="1">${_columnChoice[i][1]}</option>
                            <option value="0">${_columnChoice[i][0]}</option>
                          </select>
                        </div>
                    </div>`;
        }
        return _input;
      }
    </script>
  </body>
</html>